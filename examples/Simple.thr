THEORY Simple

IMPORT-THEORY Arithmetic
IMPORT-THEORY List
IMPORT-HASKELL List

THEOREM len3

       length (10:20:30:[]) == 3

STRATEGY ReduceLHS

length (10:20:30:[])
 = DEF length.2
1 + length (20:30:[])
 = DEF length.2
1 + (1 + length (30:[]))
 = DEF length.2
1 + (1 + (1 + length []))
 = DEF length.1
1 + (1 + (1 + 0))
 = SIMP
3

QED

LAW lengths_add
             length (xs++ys)   ==   length xs ++ length ys

THEOREM lengths_add_base

            length ([]++ys)  ==  length [] + length ys

STRATEGY ReduceBoth

LHS

length ([]++ys)
 = DEF ++.1
length ys

RHS

length [] + length ys
 = DEF length.1 @ length 1
0 + length ys
 = LAW add_left_zero l2r
length ys

QED




THEOREM lengths_add_ind
         length ((x:xs)++ys)  ==  length (x:xs) + length ys

STRATEGY ReduceBoth

LHS

length ((x:xs)++ys)
 = DEF ++.2
length (x:(xs++ys))
 = DEF length.2
1 + length (xs++ys)

RHS

length (x:xs) + length ys
 = DEF length.2 @ length 1
(1 + length xs) + length ys
 = LAW add_assoc r2l
1 + (length xs + length ys)
 = LAW lengths_add r2l @ + 2
1 + length (xs++ys)

QED
